AWSTemplateFormatVersion: "2010-09-09"
Description: "Creates AWS Resource Stack for Homework #3"

Parameters :

  PredictionEndpointParameter:
    Type: String
    Description: HW3 Prediction Endpoint
    Default: ""

Resources:

  EmailBucket:
    Type: AWS::S3::Bucket
    DependsOn: LambdaFunctionTriggerPermission
    Properties:
      BucketName: 'hw3-1323-email'                          # Change the 1323 to something unique
      VersioningConfiguration:                              # Bucket versioning is required
        Status: Enabled
      NotificationConfiguration:                            # This is the Lambda Trigger
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt PredictSpamLambda.Arn         # This is the Lambda Funtion

  EmailBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref EmailBucket
      PolicyDocument:
        Statement:
          -
            Effect: Allow
            Action:
              - s3:PutObject
            Resource:
              - !Sub arn:aws:s3:::${EmailBucket}/*
            Principal:
              Service: ses.amazonaws.com
            Condition:
              StringEquals:
                AWS:SourceAccount: !Ref 'AWS::AccountId'
                AWS:SourceArn: !Sub 'arn:aws:ses:${AWS::Region}:${AWS::AccountId}:receipt-rule-set/hw3-ses-receipt-rule-set:receipt-rule/hw3-ses-receipt-rule'

  LambdaFunctionTriggerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt PredictSpamLambda.Arn
      Principal: s3.amazonaws.com
      SourceArn: !Sub 'arn:aws:s3:::hw3-1323-email'
      SourceAccount: !Ref AWS::AccountId

  LambdaFunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: hw3-lambda-function-execution-role
      Description: Describe this IAM role here
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
              - lambda.amazonaws.com
          Action:
            - sts:AssumeRole
      Path: '/'
      Policies:
      - PolicyName: hw3-admin-access-policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: "*"
            Resource: "*"

  PredictSpamLambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: Amazon SES stores emails received in this bucket
      FunctionName: hw3-predict-spam-function
      Runtime: python3.8
      Role: !GetAtt LambdaFunctionExecutionRole.Arn
      Handler: predict_spam_function.lambda_handler
      Code:
        ZipFile: |
          """
          The Code argument is required and this ZipFile option generates a
          Python source file called index.py in the Lambda function.  This
          file will be replaced when you push changes to your GitHub repo
          and the Code Pipeline resource runs, builds your lambda function
          and deployes it to AWS Lambda
          """
          #import json
          #def lambda_handler(event, context):
          #    return {
          #        'statusCode': 200,
          #        'body': json.dumps('Hello from predict_spam_function.py!')
          #    }
      MemorySize: 256
      Timeout: 10

  SesReceiptRuleSet:
    Type: AWS::SES::ReceiptRuleSet
    Properties:
      RuleSetName: hw3-ses-receipt-rule-set

  SesReceiptRule:
    Type: AWS::SES::ReceiptRule
    Properties:
      RuleSetName: !Ref SesReceiptRuleSet
      Rule:
        Name: hw3-ses-receipt-rule
        Recipients:
          - hw3@viegco.com
        Actions:
          - S3Action:
              BucketName: !Ref EmailBucket
        Enabled: true
        ScanEnabled: true

Outputs:
  EmailBucketARN:
    Description: 'The ARN for the hw3-1323-email bucket'
    Value: !GetAtt EmailBucket.Arn
  LambdaFunctionExecutionRoleARN:
    Description: 'The ARN for the hw3-lambda-function execution role'
    Value: !GetAtt LambdaFunctionExecutionRole.Arn

